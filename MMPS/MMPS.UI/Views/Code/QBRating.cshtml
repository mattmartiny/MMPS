@model MMPS.UI.Models.CodeModel.QBRatingModel

<h2 class="h2">Passer Rating Calculator</h2>


<div class="col-md=8">
    Passer rating, quarterback rating, or QB rating (passing efficency in college) is a measure of the performance of passers, primarily quarterbacks, in American football. There are two formulae currently in use: one used by both the National Football League (NFL) and Canadian Football League (CFL), and the other used in NCAA football. Passer rating is calculated using a player's passing attempts, completions, yards, touchdowns, and interceptions. Since 1973, passer rating has been the official formula used by the NFL to determine its passing leader. Quarterback rating in the NFL is on a scale from 0 to 158.3. Passing efficiency in college football is on a scale from −731.6 to 1261.6.

    <br />
    <br />
    <a href="https://en.wikipedia.org/wiki/Passer_rating">Wikipedia on Passer Rating</a>


</div>
<br />
<table class="codeTable" style="border:solid 1px black">
    <tr><th>Quarterback</th><th>Yr.</th><th>Division</th><th>Attempts</th><th>Completions</th><th>Yards</th><th>TD</th><th>Int</th><th>QB Rate</th></tr>
    <tr><td>Patrick Mahomes</td><td>2018</td><td>NFL</td><td>580</td><td>383</td><td>5097</td><td>50</td><td>12</td><td>113.8</td></tr>
    <tr><td>Chase Daniel</td><td>2008</td><td>NCAA</td><td>528</td><td>385</td><td>4335</td><td>39</td><td>18</td><td>159.4</td></tr>
</table>
<br />
<div class="row">
@using (Ajax.BeginForm("QBRating", "Code", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "resultArea", }, new { id = "myForm" }))
{
    <div class="col-md-6">
        <div class="col-md-12">
            <div class="form-group">
              NFL  @Html.RadioButtonFor(model => model.league, "nfl")
               NCAA @Html.RadioButtonFor(model => model.league, "ncaa")
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.att, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.att, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.att, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.comp, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.comp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.yds, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.yds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.yds, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.td, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.td, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.td, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.inter, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.inter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.inter, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="col-md-12"></div>
    <div class="col-md-6">
        <input type="submit" name="Submit" value="Submit" class="btn btn-default" />
    </div>

        }


    <div id="resultArea" class="col-md-6">
        @ViewBag.result
    </div>
</div>
<br />
<div class="Row">
    <h3 class="h3">The Controller Code:</h3>
    <pre class="prettyprint col-md-10">
  if (model.league == "nfl")
            {
                double a = ((model.comp / model.att) - 0.3) * 5; //part 1 of formula
                double b = ((model.yds / model.att - 3) * 0.25); //part 2 of formula
                double c = ((model.td / model.att) * 20);        // part 3 of formula
                double d = 2.375 - ((model.inter / model.att) * 25); //part 4 of formula

                /*
                 * NFL QBR requires the result of any calculation to be non-negative and no more than 2.375
                 * It also states, if it is a negative number, set it to 0
                 * or if it's greater than 2.375, set it to 2.375
                 */


                a = Math.Max(a, 0);
                b = Math.Max(b, 0);
                c = Math.Max(c, 0);
                d = Math.Max(d, 0);

                a = Math.Min(a, 2.375);
                b = Math.Min(b, 2.375);
                c = Math.Min(c, 2.375);
                d = Math.Min(d, 2.375);


            var rating = (((a + b + c + d) / 6) * 100);

                model.QBR = Math.Round(rating, 1);

                var result = model.QBR.ToString();
               
                ViewBag.result = $"The NFL QB Rating is: {result}";
               
			}
            else
            {
                //The NCAA doesn't have a minimum or maximum limit, 


                var rating = (((8.4 * model.yds) + (330 * model.td) + (100 * model.comp) - (200 * model.inter)) / model.att);

                model.QBR = Math.Round(rating, 1);


                var result = model.QBR.ToString();
             
                  ViewBag.result = $"The NCAA QB Rating is: {result}";


            }
</pre>


</div>
<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>