@model MMPS.DATA.WebSite


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm("Edit", "WebSites", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
<div class="form-horizontal">
    <h4>WebSite</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.imageID)

    <div class="form-group">
        @Html.LabelFor(model => model.SiteName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SiteName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imageSource, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Image" />
            @*@Html.EditorFor(model => model.imageSource, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.imageSource, "", new { @class = "text-danger" })*@
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.siteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.siteUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.siteUrl, "", new { @class = "text-danger" })
        </div>
    </div> 
    </div> 





    <div class="form-group">
        @Html.LabelFor(model => model.typeID, "typeID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("typeID", null, htmlAttributes: new { @class = "form-control", Value = "3" })
            @Html.ValidationMessageFor(model => model.typeID, "", new { @class = "text-danger" } )
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.alt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.alt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.alt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
